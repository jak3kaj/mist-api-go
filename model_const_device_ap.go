/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type ConstDeviceAp struct {
	ApType string `json:"ap_type,omitempty"`
	Band24 *ConstDeviceApBand24 `json:"band24,omitempty"`
	Band5 *ConstDeviceApBand5 `json:"band5,omitempty"`
	Band6 *ConstDeviceApBand5 `json:"band6,omitempty"`
	Band24Usages *AllOfconstDeviceApBand24Usages `json:"band_24_usages,omitempty"`
	CeDfsOk bool `json:"ce_dfs_ok,omitempty"`
	CiscoPace bool `json:"cisco_pace,omitempty"`
	Description string `json:"description,omitempty"`
	// Property key is a list of country codes (e.g. \"GB, DE\")
	DisallowedChannels map[string]Object `json:"disallowed_channels,omitempty"`
	Display string `json:"display,omitempty"`
	// Property key is the GPIO port name (e.g. \"D0\", \"A1\")
	Extio map[string]ConstDeviceApExtios `json:"extio,omitempty"`
	FccDfsOk bool `json:"fcc_dfs_ok,omitempty"`
	Has11ax bool `json:"has_11ax,omitempty"`
	HasCompass bool `json:"has_compass,omitempty"`
	HasExtAnt bool `json:"has_ext_ant,omitempty"`
	HasExtio bool `json:"has_extio,omitempty"`
	HasHeight bool `json:"has_height,omitempty"`
	HasModulePort bool `json:"has_module_port,omitempty"`
	HasPoeOut bool `json:"has_poe_out,omitempty"`
	HasScanningRadio bool `json:"has_scanning_radio,omitempty"`
	HasSelectableRadio bool `json:"has_selectable_radio,omitempty"`
	HasUsb bool `json:"has_usb,omitempty"`
	HasVble bool `json:"has_vble,omitempty"`
	HasWifiBand24 bool `json:"has_wifi_band24,omitempty"`
	HasWifiBand5 bool `json:"has_wifi_band5,omitempty"`
	HasWifiBand6 bool `json:"has_wifi_band6,omitempty"`
	MaxPoeOut int32 `json:"max_poe_out,omitempty"`
	MaxWlans int32 `json:"max_wlans,omitempty"`
	Model string `json:"model,omitempty"`
	OtherDfsOk bool `json:"other_dfs_ok,omitempty"`
	Outdoor bool `json:"outdoor,omitempty"`
	// Property key is the radio number (e.g. r0, r1, ...). Property value is the RF band (e.g. \"24\", \"5\", ...)
	Radios map[string]string `json:"radios,omitempty"`
	SharedScanningRadio bool `json:"shared_scanning_radio,omitempty"`
	// Device Type. enum: `ap`
	Type_ string `json:"type"`
	Unmanaged bool `json:"unmanaged,omitempty"`
	Vble *ConstDeviceApVble `json:"vble,omitempty"`
}
