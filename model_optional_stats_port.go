/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// Port statistics
type OptionalStatsPort struct {
	// Indicates if interface is active/inactive
	Active bool `json:"active,omitempty"`
	AuthState *AllOfoptionalStatsPortAuthState `json:"auth_state,omitempty"`
	ForSite bool `json:"for_site,omitempty"`
	// indicates full or half duplex
	FullDuplex bool `json:"full_duplex,omitempty"`
	// Last sampled jitter of the interface
	Jitter float64 `json:"jitter,omitempty"`
	// Last sampled latency of the interface
	Latency float64 `json:"latency,omitempty"`
	// Last sampled loss of the interface
	Loss float64 `json:"loss,omitempty"`
	// LTE ICCID value, Check for null/empty
	LteIccid string `json:"lte_iccid,omitempty"`
	// LTE IMEI value, Check for null/empty
	LteImei string `json:"lte_imei,omitempty"`
	// LTE IMSI value, Check for null/empty
	LteImsi string `json:"lte_imsi,omitempty"`
	// Number of mac addresses in the forwarding table
	MacCount int32 `json:"mac_count,omitempty"`
	// Limit on number of dynamically learned macs
	MacLimit int32 `json:"mac_limit,omitempty"`
	// chassis identifier of the chassis type listed
	NeighborMac string `json:"neighbor_mac"`
	// description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
	NeighborPortDesc string `json:"neighbor_port_desc,omitempty"`
	// name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
	NeighborSystemName string `json:"neighbor_system_name,omitempty"`
	// is the POE configured not be disabled.
	PoeDisabled bool `json:"poe_disabled,omitempty"`
	PoeMode *AllOfoptionalStatsPortPoeMode `json:"poe_mode,omitempty"`
	// is the device attached to POE
	PoeOn bool `json:"poe_on,omitempty"`
	PortId string `json:"port_id"`
	// interface mac address
	PortMac string `json:"port_mac"`
	PortUsage *AllOfoptionalStatsPortPortUsage `json:"port_usage,omitempty"`
	// Amount of power being used by the interface at the time the command is executed. Unit in watts.
	PowerDraw float64 `json:"power_draw,omitempty"`
	// Broadcast input packets
	RxBcastPkts int32 `json:"rx_bcast_pkts,omitempty"`
	// Input rate
	RxBps int32 `json:"rx_bps,omitempty"`
	// rx bytes
	RxBytes int64 `json:"rx_bytes"`
	// Input errors
	RxErrors int32 `json:"rx_errors,omitempty"`
	// Multicast input packets
	RxMcastPkts int32 `json:"rx_mcast_pkts,omitempty"`
	// rx packets
	RxPkts int32 `json:"rx_pkts"`
	// port speed
	Speed int32 `json:"speed,omitempty"`
	StpRole *AllOfoptionalStatsPortStpRole `json:"stp_role,omitempty"`
	StpState *AllOfoptionalStatsPortStpState `json:"stp_state,omitempty"`
	// Broadcast output packets
	TxBcastPkts int32 `json:"tx_bcast_pkts,omitempty"`
	// Output rate
	TxBps int32 `json:"tx_bps,omitempty"`
	// tx bytes
	TxBytes int64 `json:"tx_bytes"`
	// Output errors
	TxErrors int32 `json:"tx_errors,omitempty"`
	// Multicast output packets
	TxMcastPkts int32 `json:"tx_mcast_pkts,omitempty"`
	// tx packets
	TxPkts int32 `json:"tx_pkts"`
	Type_ *AllOfoptionalStatsPortType_ `json:"type,omitempty"`
	// indicates if interface is unconfigured
	Unconfigured bool `json:"unconfigured,omitempty"`
	// indicates if interface is up
	Up bool `json:"up,omitempty"`
	// Optic Slot ModelName, Check for null/empty
	XcvrModel string `json:"xcvr_model,omitempty"`
	// Optic Slot Partnumber, Check for null/empty
	XcvrPartNumber string `json:"xcvr_part_number,omitempty"`
	// Optic Slot SerialNumber, Check for null/empty
	XcvrSerial string `json:"xcvr_serial,omitempty"`
}
