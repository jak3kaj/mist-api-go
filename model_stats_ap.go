/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// AP statistics
type StatsAp struct {
	AutoPlacement *StatsApAutoPlacement `json:"auto_placement,omitempty"`
	AutoUpgradeStat *StatsApAutoUpgrade `json:"auto_upgrade_stat,omitempty"`
	BleStat *StatsApBle `json:"ble_stat,omitempty"`
	CertExpiry float64 `json:"cert_expiry,omitempty"`
	ConfigReverted bool `json:"config_reverted,omitempty"`
	CpuSystem int64 `json:"cpu_system,omitempty"`
	CpuUtil int32 `json:"cpu_util,omitempty"`
	CreatedTime float64 `json:"created_time,omitempty"`
	DeviceprofileId string `json:"deviceprofile_id,omitempty"`
	EnvStat *AllOfstatsApEnvStat `json:"env_stat,omitempty"`
	EslStat *AllOfstatsApEslStat `json:"esl_stat,omitempty"`
	EvpntopoId string `json:"evpntopo_id,omitempty"`
	ExtIp string `json:"ext_ip,omitempty"`
	Fwupdate *FwupdateStat `json:"fwupdate,omitempty"`
	HwRev string `json:"hw_rev,omitempty"`
	Id string `json:"id,omitempty"`
	InactiveWiredVlans []int32 `json:"inactive_wired_vlans,omitempty"`
	IotStat map[string]StatsApIotStatAdditionalProperties `json:"iot_stat,omitempty"`
	Ip string `json:"ip,omitempty"`
	IpConfig *AllOfstatsApIpConfig `json:"ip_config,omitempty"`
	IpStat *IpStat `json:"ip_stat,omitempty"`
	// l2tp tunnel status (key is the wxtunnel_id)
	L2tpStat map[string]StatsApL2tpStat `json:"l2tp_stat,omitempty"`
	// last seen timestamp
	LastSeen float64 `json:"last_seen,omitempty"`
	LastTrouble *AllOfstatsApLastTrouble `json:"last_trouble,omitempty"`
	Led *AllOfstatsApLed `json:"led,omitempty"`
	LldpStat *AllOfstatsApLldpStat `json:"lldp_stat,omitempty"`
	Locating bool `json:"locating,omitempty"`
	// whether this AP is considered locked (placement / orientation has been vetted)
	Locked bool `json:"locked,omitempty"`
	// device mac
	Mac string `json:"mac"`
	MapId string `json:"map_id,omitempty"`
	MemUsedKb int64 `json:"mem_used_kb,omitempty"`
	// Property key is the mesh downlink id (e.g `00000000-0000-0000-1000-5c5b35000010`)
	MeshDownlinks map[string]ApStatMeshDownlink `json:"mesh_downlinks,omitempty"`
	MeshUplink *ApStatMeshUplink `json:"mesh_uplink,omitempty"`
	// device model
	Model string `json:"model"`
	ModifiedTime float64 `json:"modified_time,omitempty"`
	Mount string `json:"mount,omitempty"`
	Name string `json:"name,omitempty"`
	Notes string `json:"notes,omitempty"`
	// how many wireless clients are currently connected
	NumClients int32 `json:"num_clients,omitempty"`
	// how many WLANs are applied to the device
	NumWlans int32 `json:"num_wlans,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	// Property key is the port name (e.g. `eth0`)
	PortStat map[string]StatsApPortStat `json:"port_stat,omitempty"`
	// in mW, surplus if positive or deficit if negative
	PowerBudget int32 `json:"power_budget,omitempty"`
	// whether insufficient power
	PowerConstrained bool `json:"power_constrained,omitempty"`
	// constrained mode
	PowerOpmode string `json:"power_opmode,omitempty"`
	// DC Input / PoE 802.3at / PoE 802.3af / LLDP / ? (unknown)
	PowerSrc string `json:"power_src,omitempty"`
	RadioConfig *StatsApRadioConfig `json:"radio_config,omitempty"`
	RadioStat *StatsApRadioStat `json:"radio_stat,omitempty"`
	RxBps float64 `json:"rx_bps,omitempty"`
	RxBytes int64 `json:"rx_bytes,omitempty"`
	RxPkts int32 `json:"rx_pkts,omitempty"`
	// serial
	Serial string `json:"serial,omitempty"`
	SiteId string `json:"site_id,omitempty"`
	Status string `json:"status,omitempty"`
	SwitchRedundancy *StatsApSwitchRedundancy `json:"switch_redundancy,omitempty"`
	TxBps float64 `json:"tx_bps,omitempty"`
	TxBytes float64 `json:"tx_bytes,omitempty"`
	TxPkts float64 `json:"tx_pkts,omitempty"`
	// Device Type. enum: `ap`
	Type_ string `json:"type"`
	// how long, in seconds, has the device been up (or rebooted)
	Uptime float64 `json:"uptime,omitempty"`
	UsbStat *StatsApUsbStat `json:"usb_stat,omitempty"`
	Version string `json:"version,omitempty"`
	X float64 `json:"x,omitempty"`
	Y float64 `json:"y,omitempty"`
}
