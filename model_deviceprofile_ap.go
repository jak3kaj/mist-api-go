/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package mist

// Device Profile
type DeviceprofileAp struct {
	Aeroscout *AllOfdeviceprofileApAeroscout `json:"aeroscout,omitempty"`
	BleConfig *AllOfdeviceprofileApBleConfig `json:"ble_config,omitempty"`
	CreatedTime float64 `json:"created_time,omitempty"`
	// whether to disable eth1 port
	DisableEth1 bool `json:"disable_eth1,omitempty"`
	// whether to disable eth2 port
	DisableEth2 bool `json:"disable_eth2,omitempty"`
	// whether to disable eth3 port
	DisableEth3 bool `json:"disable_eth3,omitempty"`
	// whether to disable module port
	DisableModule bool `json:"disable_module,omitempty"`
	EslConfig *ApEslConfig `json:"esl_config,omitempty"`
	ForSite bool `json:"for_site,omitempty"`
	Id string `json:"id,omitempty"`
	IotConfig *AllOfdeviceprofileApIotConfig `json:"iot_config,omitempty"`
	IpConfig *AllOfdeviceprofileApIpConfig `json:"ip_config,omitempty"`
	Led *AllOfdeviceprofileApLed `json:"led,omitempty"`
	Mesh *AllOfdeviceprofileApMesh `json:"mesh,omitempty"`
	ModifiedTime float64 `json:"modified_time,omitempty"`
	Name string `json:"name"`
	NtpServers []string `json:"ntp_servers,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	// whether to enable power out through module port (for APH) or eth1 (for APL/BT11)
	PoePassthrough bool `json:"poe_passthrough,omitempty"`
	// Property key is the interface(s) name (e.g. \"eth1,eth2\")
	PortConfig map[string]ApPortConfig `json:"port_config,omitempty"`
	PwrConfig *AllOfdeviceprofileApPwrConfig `json:"pwr_config,omitempty"`
	RadioConfig *AllOfdeviceprofileApRadioConfig `json:"radio_config,omitempty"`
	SiteId string `json:"site_id,omitempty"`
	SwitchConfig *AllOfdeviceprofileApSwitchConfig `json:"switch_config,omitempty"`
	// Device Type. enum: `ap`
	Type_ string `json:"type"`
	UplinkPortConfig *ApUplinkPortConfig `json:"uplink_port_config,omitempty"`
	UsbConfig *AllOfdeviceprofileApUsbConfig `json:"usb_config,omitempty"`
	// a dictionary of name->value, the vars can then be used in Wlans. This can overwrite those from Site Vars
	Vars map[string]string `json:"vars,omitempty"`
}
