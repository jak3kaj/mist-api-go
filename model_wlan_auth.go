/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// authentication wlan settings
type WlanAuth struct {
	// SAE anti-clogging token threshold
	AnticlogThreshold int32 `json:"anticlog_threshold,omitempty"`
	// whether to trigger EAP reauth when the session ends
	EapReauth bool `json:"eap_reauth,omitempty"`
	// whether to enable MAC Auth, uses the same auth_servers
	EnableMacAuth bool `json:"enable_mac_auth,omitempty"`
	// when `type`==`wep`
	KeyIdx int32 `json:"key_idx,omitempty"`
	// when type=wep, four 10-character or 26-character hex string, null can be used. All keys, if provided, have to be in the same length
	Keys []string `json:"keys,omitempty"`
	// when `type`==`psk`, whether to only use multi_psk
	MultiPskOnly bool `json:"multi_psk_only,omitempty"`
	Owe *AllOfwlanAuthOwe `json:"owe,omitempty"`
	// when `type`=`psk` or `type`=`eap`, one or more of `wpa1-ccmp`, `wpa1-tkip`, `wpa2-ccmp`, `wpa2-tkip`, `wpa3`
	Pairwise []OneOfwlanAuthPairwiseItems `json:"pairwise,omitempty"`
	// when `multi_psk_only`==`true`, whether private wlan is enabled
	PrivateWlan bool `json:"private_wlan,omitempty"`
	// when `type`==`psk`, 8-64 characters, or 64 hex characters
	Psk string `json:"psk,omitempty"`
	Type_ *AllOfwlanAuthType_ `json:"type"`
	// enable WEP as secondary auth
	WepAsSecondaryAuth bool `json:"wep_as_secondary_auth,omitempty"`
}
