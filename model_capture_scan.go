/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package mist

// Initiate a Scan Radio Packet Capture
type CaptureScan struct {
	// filter by ap_mac
	ApMac string `json:"ap_mac,omitempty"`
	// dictionary key is AP mac and value is a dictionary which contains key “band”, “bandwidth”, “channel” and “tcpdump_expression”. In case keys are missed we will take parent value if parent values are not set we will use default value
	Aps map[string]CaptureScanAps `json:"aps,omitempty"`
	Band *AllOfcaptureScanBand `json:"band,omitempty"`
	Bandwidth *AllOfcaptureScanBandwidth `json:"bandwidth,omitempty"`
	// specify the channel value where scan PCAP has to be started, default value gets applied when user provides wrong values
	Channel int32 `json:"channel,omitempty"`
	// filter by client mac
	ClientMac string `json:"client_mac,omitempty"`
	// duration of the capture, in seconds
	Duration int32 `json:"duration,omitempty"`
	Format *AllOfcaptureScanFormat `json:"format,omitempty"`
	// max_len of each packet to capture
	MaxPktLen int32 `json:"max_pkt_len,omitempty"`
	// number of packets to capture, 0 for unlimited
	NumPackets int32 `json:"num_packets,omitempty"`
	// tcpdump expression, port specific if specified under ports dict, otherwise applicable across ports if specified at top level of payload. Port specific value overrides top level value when both exist.
	TcpdumpExpression string `json:"tcpdump_expression,omitempty"`
	// enum: `scan`
	Type_ string `json:"type"`
	// specify the bandwidth value with respect to the channel.
	Width string `json:"width,omitempty"`
}
