/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package mist

// Gateway statistics
type StatsGateway struct {
	ApRedundancy *ApRedundancy `json:"ap_redundancy,omitempty"`
	ArpTableStats *ArpTableStats `json:"arp_table_stats,omitempty"`
	// only present when `bgp_peers` in `fields` query parameter Each port object is same as `GET /api/v1/sites/:site_id/stats/bgp_peers/search` result object, except that org_id, site_id, mac, model are removed
	BgpPeers []OptionalStatsBgp `json:"bgp_peers,omitempty"`
	CertExpiry int64 `json:"cert_expiry,omitempty"`
	ClusterConfig *StatsClusterConfig `json:"cluster_config,omitempty"`
	ClusterStat *StatsGatewayCluster `json:"cluster_stat,omitempty"`
	ConductorName string `json:"conductor_name,omitempty"`
	ConfigStatus string `json:"config_status,omitempty"`
	Cpu2Stat *CpuStat `json:"cpu2_stat,omitempty"`
	CpuStat *CpuStat `json:"cpu_stat,omitempty"`
	CreatedTime float64 `json:"created_time,omitempty"`
	DeviceprofileId string `json:"deviceprofile_id,omitempty"`
	// Property key is the network name
	Dhcpd2Stat map[string]DhcpdStatLan `json:"dhcpd2_stat,omitempty"`
	// Property key is the network name
	DhcpdStat map[string]DhcpdStatLan `json:"dhcpd_stat,omitempty"`
	EvpntopoId string `json:"evpntopo_id,omitempty"`
	// IP address
	ExtIp string `json:"ext_ip,omitempty"`
	Fwupdate *FwupdateStat `json:"fwupdate,omitempty"`
	HasPcap bool `json:"has_pcap,omitempty"`
	// hostname reported by the device
	Hostname string `json:"hostname,omitempty"`
	// serial
	Id string `json:"id,omitempty"`
	// Property key is the interface name
	If2Stat map[string]IfStatProperty `json:"if2_stat,omitempty"`
	// Property key is the interface name
	IfStat map[string]IfStatProperty `json:"if_stat,omitempty"`
	// IP address
	Ip string `json:"ip,omitempty"`
	Ip2Stat *IpStat `json:"ip2_stat,omitempty"`
	IpStat *IpStat `json:"ip_stat,omitempty"`
	IsHa bool `json:"is_ha,omitempty"`
	// last seen timestamp
	LastSeen float64 `json:"last_seen,omitempty"`
	// device mac
	Mac string `json:"mac"`
	// serial
	MapId string `json:"map_id,omitempty"`
	Memory2Stat *AllOfstatsGatewayMemory2Stat `json:"memory2_stat,omitempty"`
	MemoryStat *AllOfstatsGatewayMemoryStat `json:"memory_stat,omitempty"`
	// device model
	Model string `json:"model,omitempty"`
	ModifiedTime float64 `json:"modified_time,omitempty"`
	Module2Stat []ModuleStatItem `json:"module2_stat,omitempty"`
	ModuleStat []ModuleStatItem `json:"module_stat,omitempty"`
	// device name if configured
	Name string `json:"name,omitempty"`
	NodeName string `json:"node_name,omitempty"`
	// serial
	OrgId string `json:"org_id,omitempty"`
	// only present when `ports` in `fields` query parameter Each port object is same as `GET /api/v1/sites/:site_id/stats/ports/search` result object, except that org_id, site_id, mac, model are removed
	Ports []OptionalStatsPort `json:"ports,omitempty"`
	RouteSummaryStats *RouteSummaryStats `json:"route_summary_stats,omitempty"`
	// device name if configured
	RouterName string `json:"router_name,omitempty"`
	// serial
	Serial string `json:"serial,omitempty"`
	Service2Stat map[string]ServiceStatProperty `json:"service2_stat,omitempty"`
	ServiceStat map[string]ServiceStatProperty `json:"service_stat,omitempty"`
	ServiceStatus *StatsGatewayServiceStatus `json:"service_status,omitempty"`
	// serial
	SiteId string `json:"site_id,omitempty"`
	Spu2Stat []StatsGatewaySpuItem `json:"spu2_stat,omitempty"`
	SpuStat []StatsGatewaySpuItem `json:"spu_stat,omitempty"`
	Status string `json:"status,omitempty"`
	// only present when `tunnels` in `fields` query parameter Each port object is same as `GET /api/v1/sites/:site_id/stats/tunnels/search` result object, except that org_id, site_id, mac, model are removed
	Tunnels []OptionalStatWanTunnel `json:"tunnels,omitempty"`
	// Device Type. enum: `gateway`
	Type_ string `json:"type"`
	Uptime float64 `json:"uptime,omitempty"`
	Version string `json:"version,omitempty"`
	// only present when `vpn_peers` in `fields` query parameter Each port object is same as `GET /api/v1/sites/:site_id/stats/vpn_peers/search` result object, except that org_id, site_id, mac, model are removed
	VpnPeers []OptionalStatVpnPeer `json:"vpn_peers,omitempty"`
}
