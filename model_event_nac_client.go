/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package mist

type EventNacClient struct {
	Ap string `json:"ap,omitempty"`
	// authentication type, e.g. \"eap-tls\", \"peap-tls\", \"eap-ttls\", \"eap-teap\", \"mab\", \"psk\", \"device-auth\"
	AuthType string `json:"auth_type,omitempty"`
	Bssid string `json:"bssid,omitempty"`
	DeviceMac string `json:"device_mac,omitempty"`
	// NAC Policy Dry Run Rule ID, if present and matched
	DryrunNacruleId string `json:"dryrun_nacrule_id,omitempty"`
	DryrunNacruleMatched bool `json:"dryrun_nacrule_matched,omitempty"`
	IdpId string `json:"idp_id,omitempty"`
	IdpRole []string `json:"idp_role,omitempty"`
	// Username presented to the Identity Provider
	IdpUsername string `json:"idp_username,omitempty"`
	// Client MAC address
	Mac string `json:"mac,omitempty"`
	// Mist Edge ID used to connect to cloud
	MxedgeId string `json:"mxedge_id,omitempty"`
	// NAC Policy Rule ID, if matched
	NacruleId string `json:"nacrule_id,omitempty"`
	NacruleMatched bool `json:"nacrule_matched,omitempty"`
	NasVendor string `json:"nas_vendor,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	PortId string `json:"port_id,omitempty"`
	// Type of client i.e wired, wireless
	PortType string `json:"port_type,omitempty"`
	RandomMac bool `json:"random_mac,omitempty"`
	RespAttrs []string `json:"resp_attrs,omitempty"`
	SiteId string `json:"site_id,omitempty"`
	Ssid string `json:"ssid,omitempty"`
	Timestamp float64 `json:"timestamp,omitempty"`
	// event type, e.g. NAC_CLIENT_PERMIT
	Type_ string `json:"type,omitempty"`
	// labels derived from usermac entry
	UsermacLabel []string `json:"usermac_label,omitempty"`
	// Username presented by the client
	Username string `json:"username,omitempty"`
	// Vlan ID
	Vlan string `json:"vlan,omitempty"`
	// Vlan source, e.g. \"nactag\", \"usermac\"
	VlanSource string `json:"vlan_source,omitempty"`
}
