/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type InlineResponse200144 struct {
	AclPolicies []AclPolicy `json:"acl_policies,omitempty"`
	// ACL Tags to identify traffic source or destination. Key name is the tag name
	AclTags map[string]AclTag `json:"acl_tags,omitempty"`
	// additional CLI commands to append to the generated Junos config  **Note**: no check is done
	AdditionalConfigCmds []string `json:"additional_config_cmds,omitempty"`
	Analytic *SiteSettingAnalytic `json:"analytic,omitempty"`
	ApMatching *SiteSettingApMatching `json:"ap_matching,omitempty"`
	ApPortConfig *SiteSettingApPortConfig `json:"ap_port_config,omitempty"`
	// enable threshold-based device down delivery for AP devices only. When configured it takes effect for AP devices and `device_updown_threshold` is ignored.
	ApUpdownThreshold int32 `json:"ap_updown_threshold,omitempty"`
	AutoPlacement *any `json:"auto_placement,omitempty"`
	AutoUpgrade *any `json:"auto_upgrade,omitempty"`
	BlacklistUrl string `json:"blacklist_url,omitempty"`
	BleConfig *any `json:"ble_config,omitempty"`
	// whether to enable ap auto config revert
	ConfigAutoRevert bool `json:"config_auto_revert,omitempty"`
	ConfigPushPolicy *any `json:"config_push_policy,omitempty"`
	CreatedTime float64 `json:"created_time,omitempty"`
	CriticalUrlMonitoring *any `json:"critical_url_monitoring,omitempty"`
	// by default, device_updown_thresold, if set, will apply to all devices types if different values for specific device type is desired, use the following
	DeviceUpdownThreshold int32 `json:"device_updown_threshold,omitempty"`
	DhcpSnooping *DhcpSnooping `json:"dhcp_snooping,omitempty"`
	// if some system-default port usages are not desired - namely, ap / iot / uplink
	DisabledSystemDefinedPortUsages []SystemDefinedPortUsages `json:"disabled_system_defined_port_usages,omitempty"`
	// Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting
	DnsServers []string `json:"dns_servers,omitempty"`
	// Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting
	DnsSuffix []string `json:"dns_suffix,omitempty"`
	Engagement *any `json:"engagement,omitempty"`
	EvpnOptions *any `json:"evpn_options,omitempty"`
	ExtraRoutes map[string]ExtraRoute `json:"extra_routes,omitempty"`
	// Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")
	ExtraRoutes6 map[string]ExtraRoute6 `json:"extra_routes6,omitempty"`
	// name/val pair objects for location engine to use
	Flags map[string]string `json:"flags,omitempty"`
	ForSite bool `json:"for_site,omitempty"`
	Gateway *any `json:"gateway,omitempty"`
	// additional CLI commands to append to the generated Junos config  **Note**: no check is done
	GatewayAdditionalConfigCmds []string `json:"gateway_additional_config_cmds,omitempty"`
	GatewayMgmt *any `json:"gateway_mgmt,omitempty"`
	// enable threshold-based device down delivery for Gateway devices only. When configured it takes effect for GW devices and `device_updown_threshold` is ignored.
	GatewayUpdownThreshold int32 `json:"gateway_updown_threshold,omitempty"`
	Id string `json:"id,omitempty"`
	Led *any `json:"led,omitempty"`
	MistNac *any `json:"mist_nac,omitempty"`
	ModifiedTime float64 `json:"modified_time,omitempty"`
	Mxedge *any `json:"mxedge,omitempty"`
	MxedgeMgmt *MxedgeMgmt `json:"mxedge_mgmt,omitempty"`
	Mxtunnels *any `json:"mxtunnels,omitempty"`
	// Property key is network name
	Networks map[string]SwitchNetwork `json:"networks,omitempty"`
	// list of NTP servers
	NtpServers []string `json:"ntp_servers,omitempty"`
	Occupancy *any `json:"occupancy,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	// Junos OSPF areas
	OspfAreas map[string]OspfArea `json:"ospf_areas,omitempty"`
	PaloaltoNetworks *SiteSettingPaloaltoNetworks `json:"paloalto_networks,omitempty"`
	// whether to store the config on AP
	PersistConfigOnDevice bool `json:"persist_config_on_device,omitempty"`
	// Property key is the port mirroring instance name port_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output. A maximum 4 port mirrorings is allowed
	PortMirroring map[string]SwitchPortMirroringProperty `json:"port_mirroring,omitempty"`
	PortUsages map[string]SwitchPortUsage `json:"port_usages,omitempty"`
	Proxy *any `json:"proxy,omitempty"`
	RadioConfig *any `json:"radio_config,omitempty"`
	RadiusConfig *any `json:"radius_config,omitempty"`
	RemoteSyslog *RemoteSyslog `json:"remote_syslog,omitempty"`
	// by default, when we configure a device, we only clean up config we generates. Remove existing configs if enabled
	RemoveExistingConfigs bool `json:"remove_existing_configs,omitempty"`
	// whether AP should periodically connect to BLE devices and report GATT device info (device name, manufacturer name, serial number, battery %, temperature, humidity)
	ReportGatt bool `json:"report_gatt,omitempty"`
	Rogue *any `json:"rogue,omitempty"`
	Rtsa *any `json:"rtsa,omitempty"`
	SimpleAlert *any `json:"simple_alert,omitempty"`
	SiteId string `json:"site_id,omitempty"`
	Skyatp *SiteSettingSkyatp `json:"skyatp,omitempty"`
	SnmpConfig *SnmpConfig `json:"snmp_config,omitempty"`
	SrxApp *SiteSettingSrxApp `json:"srx_app,omitempty"`
	// when limit_ssh_access = true in Org Setting, list of SSH public keys provided by Mist Support to install onto APs (see Org:Setting)
	SshKeys []string `json:"ssh_keys,omitempty"`
	Ssr *SiteSettingSsr `json:"ssr,omitempty"`
	StatusPortal *SiteSettingStatusPortal `json:"status_portal,omitempty"`
	Switch_ *any `json:"switch,omitempty"`
	SwitchMatching *any `json:"switch_matching,omitempty"`
	SwitchMgmt *any `json:"switch_mgmt,omitempty"`
	// enable threshold-based device down delivery for Switch devices only. When configured it takes effect for SW devices and `device_updown_threshold` is ignored.
	SwitchUpdownThreshold int32 `json:"switch_updown_threshold,omitempty"`
	SyntheticTest *SynthetictestConfig `json:"synthetic_test,omitempty"`
	// whether to track anonymous BLE assets (requires ‘track_asset’  enabled)
	TrackAnonymousDevices bool `json:"track_anonymous_devices,omitempty"`
	TuntermMonitoring []TuntermMonitoringItem `json:"tunterm_monitoring,omitempty"`
	TuntermMonitoringDisabled bool `json:"tunterm_monitoring_disabled,omitempty"`
	TuntermMulticastConfig *SiteSettingTuntermMulticastConfig `json:"tunterm_multicast_config,omitempty"`
	UplinkPortConfig *ApUplinkPortConfig `json:"uplink_port_config,omitempty"`
	// a dictionary of name->value, the vars can then be used in Wlans. This can overwrite those from Site Vars
	Vars map[string]string `json:"vars,omitempty"`
	Vna *SiteSettingVna `json:"vna,omitempty"`
	VrfConfig *VrfConfig `json:"vrf_config,omitempty"`
	// Property key is the network name
	VrfInstances map[string]SwitchVrfInstance `json:"vrf_instances,omitempty"`
	// Property key is the vrrp group
	VrrpGroups map[string]VrrpGroup `json:"vrrp_groups,omitempty"`
	// optional, for EX9200 only to seggregate virtual-switches. Property key is the instance name
	VsInstance map[string]VsInstanceProperty `json:"vs_instance,omitempty"`
	WanVna *SiteSettingWanVna `json:"wan_vna,omitempty"`
	WatchedStationUrl string `json:"watched_station_url,omitempty"`
	WhitelistUrl string `json:"whitelist_url,omitempty"`
	Wids *any `json:"wids,omitempty"`
	Wifi *any `json:"wifi,omitempty"`
	WiredVna *SiteSettingWiredVna `json:"wired_vna,omitempty"`
	ZoneOccupancyAlert *any `json:"zone_occupancy_alert,omitempty"`
}
