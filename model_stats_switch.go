/*
 * Mist API
 *
 * > Version: **2409.1.9** > > Date: **September 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates] (https://www.juniper.net/documentation/us/en/software/mist/api/http/getting-started/how-to-get-started)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 
 *
 * API version: 2409.1.9
 * Contact: tmunzer@juniper.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// Switch statistics
type StatsSwitch struct {
	ApRedundancy *StatsSwitchApRedundancy `json:"ap_redundancy,omitempty"`
	ArpTableStats *ArpTableStats `json:"arp_table_stats,omitempty"`
	CertExpiry int64 `json:"cert_expiry,omitempty"`
	Clients []StatsSwitchClientItem `json:"clients,omitempty"`
	ClientsStats *StatsSwitchClientsStats `json:"clients_stats,omitempty"`
	ConfigStatus string `json:"config_status,omitempty"`
	CpuStat *CpuStat `json:"cpu_stat,omitempty"`
	CreatedTime float64 `json:"created_time,omitempty"`
	DeviceprofileId string `json:"deviceprofile_id,omitempty"`
	// Property key is the network name
	DhcpdStat map[string]DhcpdStatLan `json:"dhcpd_stat,omitempty"`
	EvpntopoId string `json:"evpntopo_id,omitempty"`
	FwVersionsOutofsync bool `json:"fw_versions_outofsync,omitempty"`
	Fwupdate *FwupdateStat `json:"fwupdate,omitempty"`
	// whether the switch supports packet capture
	HasPcap bool `json:"has_pcap,omitempty"`
	// hostname reported by the device
	Hostname string `json:"hostname,omitempty"`
	// device hardware revision number
	HwRev string `json:"hw_rev,omitempty"`
	Id string `json:"id,omitempty"`
	// Property key is the interface name
	IfStat map[string]IfStatProperty `json:"if_stat,omitempty"`
	Ip string `json:"ip,omitempty"`
	IpStat *IpStat `json:"ip_stat,omitempty"`
	LastSeen float64 `json:"last_seen,omitempty"`
	LastTrouble *AllOfstatsSwitchLastTrouble `json:"last_trouble,omitempty"`
	Mac string `json:"mac,omitempty"`
	MacTableStats *MacTableStats `json:"mac_table_stats,omitempty"`
	MapId string `json:"map_id,omitempty"`
	MemoryStat *AllOfstatsSwitchMemoryStat `json:"memory_stat,omitempty"`
	Model string `json:"model,omitempty"`
	ModifiedTime float64 `json:"modified_time,omitempty"`
	ModuleStat []ModuleStatItem `json:"module_stat,omitempty"`
	// device name if configured
	Name string `json:"name,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	// only present when `ports` in `fields` query parameter Each port object is same as `GET /api/v1/sites/:site_id/stats/ports/search` result object, except that org_id, site_id, mac, model are removed
	Ports []OptionalStatsPort `json:"ports,omitempty"`
	RouteSummaryStats *RouteSummaryStats `json:"route_summary_stats,omitempty"`
	Serial string `json:"serial,omitempty"`
	ServiceStat map[string]ServiceStatProperty `json:"service_stat,omitempty"`
	SiteId string `json:"site_id,omitempty"`
	Status string `json:"status,omitempty"`
	// Device Type. enum: `switch`
	Type_ string `json:"type"`
	Uptime float64 `json:"uptime,omitempty"`
	VcMac string `json:"vc_mac,omitempty"`
	VcSetupInfo *StatsSwitchVcSetupInfo `json:"vc_setup_info,omitempty"`
	Version string `json:"version,omitempty"`
}
